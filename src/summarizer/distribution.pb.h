// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: summarizer/distribution.proto

#ifndef PROTOBUF_summarizer_2fdistribution_2eproto__INCLUDED
#define PROTOBUF_summarizer_2fdistribution_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace topicsum {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_summarizer_2fdistribution_2eproto();
void protobuf_AssignDesc_summarizer_2fdistribution_2eproto();
void protobuf_ShutdownFile_summarizer_2fdistribution_2eproto();

class DistributionEntry;
class DistributionProto;

// ===================================================================

class DistributionEntry : public ::google::protobuf::Message {
 public:
  DistributionEntry();
  virtual ~DistributionEntry();

  DistributionEntry(const DistributionEntry& from);

  inline DistributionEntry& operator=(const DistributionEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DistributionEntry& default_instance();

  void Swap(DistributionEntry* other);

  // implements Message ----------------------------------------------

  DistributionEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DistributionEntry& from);
  void MergeFrom(const DistributionEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string word = 1;
  inline bool has_word() const;
  inline void clear_word();
  static const int kWordFieldNumber = 1;
  inline const ::std::string& word() const;
  inline void set_word(const ::std::string& value);
  inline void set_word(const char* value);
  inline void set_word(const char* value, size_t size);
  inline ::std::string* mutable_word();
  inline ::std::string* release_word();
  inline void set_allocated_word(::std::string* word);

  // optional double value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline double value() const;
  inline void set_value(double value);

  // @@protoc_insertion_point(class_scope:topicsum.DistributionEntry)
 private:
  inline void set_has_word();
  inline void clear_has_word();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* word_;
  double value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_summarizer_2fdistribution_2eproto();
  friend void protobuf_AssignDesc_summarizer_2fdistribution_2eproto();
  friend void protobuf_ShutdownFile_summarizer_2fdistribution_2eproto();

  void InitAsDefaultInstance();
  static DistributionEntry* default_instance_;
};
// -------------------------------------------------------------------

class DistributionProto : public ::google::protobuf::Message {
 public:
  DistributionProto();
  virtual ~DistributionProto();

  DistributionProto(const DistributionProto& from);

  inline DistributionProto& operator=(const DistributionProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DistributionProto& default_instance();

  void Swap(DistributionProto* other);

  // implements Message ----------------------------------------------

  DistributionProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DistributionProto& from);
  void MergeFrom(const DistributionProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .topicsum.DistributionEntry entry = 1;
  inline int entry_size() const;
  inline void clear_entry();
  static const int kEntryFieldNumber = 1;
  inline const ::topicsum::DistributionEntry& entry(int index) const;
  inline ::topicsum::DistributionEntry* mutable_entry(int index);
  inline ::topicsum::DistributionEntry* add_entry();
  inline const ::google::protobuf::RepeatedPtrField< ::topicsum::DistributionEntry >&
      entry() const;
  inline ::google::protobuf::RepeatedPtrField< ::topicsum::DistributionEntry >*
      mutable_entry();

  // @@protoc_insertion_point(class_scope:topicsum.DistributionProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::topicsum::DistributionEntry > entry_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_summarizer_2fdistribution_2eproto();
  friend void protobuf_AssignDesc_summarizer_2fdistribution_2eproto();
  friend void protobuf_ShutdownFile_summarizer_2fdistribution_2eproto();

  void InitAsDefaultInstance();
  static DistributionProto* default_instance_;
};
// ===================================================================


// ===================================================================

// DistributionEntry

// required string word = 1;
inline bool DistributionEntry::has_word() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DistributionEntry::set_has_word() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DistributionEntry::clear_has_word() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DistributionEntry::clear_word() {
  if (word_ != &::google::protobuf::internal::kEmptyString) {
    word_->clear();
  }
  clear_has_word();
}
inline const ::std::string& DistributionEntry::word() const {
  return *word_;
}
inline void DistributionEntry::set_word(const ::std::string& value) {
  set_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    word_ = new ::std::string;
  }
  word_->assign(value);
}
inline void DistributionEntry::set_word(const char* value) {
  set_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    word_ = new ::std::string;
  }
  word_->assign(value);
}
inline void DistributionEntry::set_word(const char* value, size_t size) {
  set_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    word_ = new ::std::string;
  }
  word_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DistributionEntry::mutable_word() {
  set_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    word_ = new ::std::string;
  }
  return word_;
}
inline ::std::string* DistributionEntry::release_word() {
  clear_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = word_;
    word_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DistributionEntry::set_allocated_word(::std::string* word) {
  if (word_ != &::google::protobuf::internal::kEmptyString) {
    delete word_;
  }
  if (word) {
    set_has_word();
    word_ = word;
  } else {
    clear_has_word();
    word_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional double value = 2;
inline bool DistributionEntry::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DistributionEntry::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DistributionEntry::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DistributionEntry::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline double DistributionEntry::value() const {
  return value_;
}
inline void DistributionEntry::set_value(double value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// DistributionProto

// repeated .topicsum.DistributionEntry entry = 1;
inline int DistributionProto::entry_size() const {
  return entry_.size();
}
inline void DistributionProto::clear_entry() {
  entry_.Clear();
}
inline const ::topicsum::DistributionEntry& DistributionProto::entry(int index) const {
  return entry_.Get(index);
}
inline ::topicsum::DistributionEntry* DistributionProto::mutable_entry(int index) {
  return entry_.Mutable(index);
}
inline ::topicsum::DistributionEntry* DistributionProto::add_entry() {
  return entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::topicsum::DistributionEntry >&
DistributionProto::entry() const {
  return entry_;
}
inline ::google::protobuf::RepeatedPtrField< ::topicsum::DistributionEntry >*
DistributionProto::mutable_entry() {
  return &entry_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace topicsum

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_summarizer_2fdistribution_2eproto__INCLUDED
